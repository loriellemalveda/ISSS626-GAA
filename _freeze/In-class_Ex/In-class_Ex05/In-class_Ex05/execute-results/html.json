{
  "hash": "d741610b39adc5a058944338c631fa37",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"In-class Exercise 5\"\nauthor: \"Lorielle Malveda\"\ndate: \"September 23, 2024\"\ndate-modified: \"last-modified\"\nexecute: \n  eval: true\n  echo: true\n  freeze: true\n  warning: false\n---\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(sf, spdep, sfdep, tmap, tidyverse, knitr)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhunan <- st_read(dsn = \"data/geospatial\", \n                 layer = \"Hunan\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `Hunan' from data source \n  `C:\\loriellemalveda\\ISSS626-GAA\\In-class_Ex\\In-class_Ex05\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhunan2012 <- read_csv(\"data/aspatial/Hunan_2012.csv\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhunan_GDPPC <- left_join(hunan,hunan2012) %>%\n  select(1:4, 7, 15)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwm_q <- hunan_GDPPC %>%\n  mutate(nb = st_contiguity(geometry),\n         wt=st_weights(nb, style = 'W'),\n         .before=1)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nqtm(wm_q)\n```\n\n::: {.cell-output-display}\n![](In-class_Ex05_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nglobal_moran_test(wm_q$GDPPC,\n                       wm_q$nb,\n                       wm_q$wt)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMoran I test under randomisation\n\ndata:  x  \nweights: listw    \n\nMoran I statistic standard deviate = 4.7351, p-value = 1.095e-06\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.300749970      -0.011494253       0.004348351 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\n#to make sure IT IS REPRODUCIBLE\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nglobal_moran_perm(wm_q$GDPPC,\n                  wm_q$nb,\n                  wm_q$wt,\n                  nsim=999)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.30075, observed rank = 1000, p-value < 2.2e-16\nalternative hypothesis: two.sided\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlisa <- wm_q %>%\n  mutate(local_moran=local_moran(GDPPC, nb, wt, nsim = 99),\n                     .before =1) %>%\n           unnest(local_moran)\n#unnest - instead of keeping it in a list it will be in the df?\n\n\n# ii is local moran i\n#eii exp of local moran if (condition) {\n # 3 p values \n\n#the quadrants if you use spdep you need to do it one by one to classify high high high low etc\n#in sfdep the label is already there\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode('plot')\ntm_shape(lisa)+\n  tm_fill(\"ii\")+\n  tm_borders(alpha=0.5)+\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(\n    main.title = \"local Moran I of G\",\n    main.title.size=2)\n```\n\n::: {.cell-output-display}\n![](In-class_Ex05_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode('plot')\ntm_shape(lisa)+\n  tm_fill(\"p_ii_sim\")+\n  tm_borders(alpha=0.5)+\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(\n    main.title = \"p-value of local Moran I\",\n    main.title.size=2)\n```\n\n::: {.cell-output-display}\n![](In-class_Ex05_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmap1 <- tm_shape(lisa)+\n  tm_fill(\"ii\")+\n  tm_borders(alpha=0.5)+\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(\n    main.title = \"local Moran I of G\",\n    main.title.size=2)\n  \n  \n  map2 <- tm_shape(lisa)+\n  tm_fill(\"p_ii_sim\")+\n  tm_borders(alpha=0.5)+\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(\n    main.title = \"p-value of local Moran I\",\n    main.title.size=2)\n  \n  tmap_arrange(map1,map2,ncol=2)\n```\n\n::: {.cell-output-display}\n![](In-class_Ex05_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlisa_sig <- lisa %>%\n  filter(p_ii < 0.05)\ntm_shape(lisa)+\n  tm_polygons()+\n  tm_borders(alpha = 0.5)+\n  tm_shape(lisa_sig)+\n  tm_fill(\"mean\")+\n  tm_borders(alpha=0.4)\n```\n\n::: {.cell-output-display}\n![](In-class_Ex05_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n\n```{.r .cell-code}\n  #in this map you ar eonly pulling out statistically significant values\n```\n:::\n\n\nbased on this map, you have the high-high clusters then 2 outliers one is the purple outlier means they are low surrounded by high\n\nthe green one is not an outlier but is actually a cluster that is a lowlow cluster\n\nbe wary of this lisa map because it filtered out the non-statistically significant values\n\nso the cluster low low might be a cluster that is surrounded by non statistically significant values\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwm_idw <- hunan_GDPPC %>%\n  mutate(nb= st_contiguity(geometry),\n         wts= st_inverse_distance(nb, geometry, scale=1, alpha=1))\n\n#each of the table will have different values - depends on how close to the central it is\n#when we calculate the disrtance we use the inverse distance\n#nb = nearest nneighbor\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nHCSA <- wm_idw %>%\n  mutate(local_Gi = local_gstar_perm(GDPPC, nb,wt,nsi=999),\n         .before=1) %>%\n  unnest(local_Gi)\nHCSA\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 88 features and 18 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n# A tibble: 88 × 19\n   gi_star cluster   e_gi     var_gi std_dev p_value p_sim p_folded_sim skewness\n     <dbl> <fct>    <dbl>      <dbl>   <dbl>   <dbl> <dbl>        <dbl>    <dbl>\n 1  0.0416 Low     0.0113 0.00000715  0.0605 9.52e-1 0.806        0.403    1.04 \n 2 -0.333  Low     0.0110 0.00000672 -0.231  8.17e-1 0.98         0.49     0.980\n 3  0.281  High    0.0123 0.00000783 -0.0295 9.76e-1 0.826        0.413    1.14 \n 4  0.411  High    0.0114 0.00000798  0.432  6.66e-1 0.57         0.285    1.05 \n 5  0.387  High    0.0115 0.00000829  0.345  7.30e-1 0.616        0.308    1.04 \n 6 -0.368  High    0.0116 0.00000687 -0.489  6.25e-1 0.746        0.373    0.892\n 7  3.56   High    0.0148 0.00000681  2.82   4.80e-3 0.024        0.012    0.950\n 8  2.52   High    0.0134 0.00000500  1.72   8.48e-2 0.122        0.061    0.846\n 9  4.56   High    0.0142 0.00000498  3.93   8.59e-5 0.002        0.001    0.722\n10  1.16   Low     0.0109 0.00000445  1.45   1.48e-1 0.156        0.078    0.736\n# ℹ 78 more rows\n# ℹ 10 more variables: kurtosis <dbl>, NAME_2 <chr>, ID_3 <int>, NAME_3 <chr>,\n#   ENGTYPE_3 <chr>, County <chr>, GDPPC <dbl>, geometry <POLYGON [°]>,\n#   nb <nb>, wts <list>\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(HCSA)+\n  tm_fill(\"gi_star\")+\n  tm_borders(alpha=0.5)\n```\n\n::: {.cell-output-display}\n![](In-class_Ex05_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n\n```{.r .cell-code}\ntm_view(set.zoom.limits = c(6,8))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$tm_layout\n$tm_layout$set.zoom.limits\n[1] 6 8\n\n$tm_layout$style\n[1] NA\n\n\nattr(,\"class\")\n[1] \"tm\"\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nHCSA_sig <- HCSA %>%\n  filter(p_sim < 0.05)\ntm_shape(HCSA) + \n  tm_polygons()+\n  tm_borders(alpha = 0.5)+\n  tm_shape(HCSA_sig)+\n  tm_fill(\"cluster\")+\ntm_borders(alpha=0.4)\n```\n\n::: {.cell-output-display}\n![](In-class_Ex05_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "In-class_Ex05_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}